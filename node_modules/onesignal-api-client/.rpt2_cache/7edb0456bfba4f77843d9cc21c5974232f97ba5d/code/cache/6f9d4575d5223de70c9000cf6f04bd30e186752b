{"code":"import * as tslib_1 from \"tslib\";\r\nimport { cancelNotification, sendNotification } from \"api\";\r\n/**\r\n * OneSignal Rest API wrapper\r\n *\r\n * @export\r\n * @param {string} appId Application identifier\r\n * @param {string} secretKey REST API key\r\n * @returns {IRestApi}\r\n */\r\nexport function oneSignalApi(appId, secretKey) {\r\n    if (!appId) {\r\n        throw new TypeError(\"An application identifier is required\");\r\n    }\r\n    if (!secretKey) {\r\n        throw new TypeError(\"A secret API key is required\");\r\n    }\r\n    return {\r\n        sendNotification: function (notification) {\r\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    return [2 /*return*/, sendNotification(secretKey, Object.assign(notification, { app_id: appId }))];\r\n                });\r\n            });\r\n        },\r\n        cancelNotification: cancelNotification.bind(null, secretKey, appId)\r\n    };\r\n}\r\n//# sourceMappingURL=Client.js.map","map":{"version":3,"file":"Client.js","sourceRoot":"","sources":["Client.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,KAAK,CAAC;AA+C3D;;;;;;;GAOG;AACH,MAAM,uBAAuB,KAAa,EAAE,SAAiB;IAC3D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACX,MAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;IAC/D,CAAC;IACD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACf,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,CAAC;QACC,gBAAgB,EAAtB,UACE,YAGyB;;;oBAEzB,sBAAO,gBAAgB,CACrB,SAAS,EACT,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAC/C,EAAC;;;SACH;QACD,kBAAkB,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC;KACpE,CAAC;AACJ,CAAC"},"dts":{"name":"/home/leosuncin/Workspaces/github/onesignal-api-client/lib/Client.d.ts","text":"import { INotificationDevices, INotificationFilters, INotificationSegments } from \"interfaces/notification\";\r\n/**\r\n * Closure for One Signal API\r\n *\r\n * @export\r\n * @interface IOneSignalApi\r\n */\r\nexport interface IOneSignalApi {\r\n    (appId: string, secretKey: string): any;\r\n}\r\n/**\r\n * OneSignal REST API methods\r\n *\r\n * @export\r\n * @interface IRestApi\r\n */\r\nexport interface IRestApi {\r\n    /**\r\n     * Send notification to users\r\n     *\r\n     * @param {INotification} notification The notification to send\r\n     * @returns {Promise<object>}\r\n     * @memberof IRestApi\r\n     */\r\n    sendNotification(notification: INotificationDevices | INotificationFilters | INotificationSegments): Promise<object>;\r\n    /**\r\n     * Stop a scheduled or currently outgoing notification\r\n     *\r\n     * @param {string} notificationId Notification identifier\r\n     * @returns {Promise<object>}\r\n     * @memberof IRestApi\r\n     */\r\n    cancelNotification(notificationId: string): Promise<object>;\r\n}\r\n/**\r\n * OneSignal Rest API wrapper\r\n *\r\n * @export\r\n * @param {string} appId Application identifier\r\n * @param {string} secretKey REST API key\r\n * @returns {IRestApi}\r\n */\r\nexport declare function oneSignalApi(appId: string, secretKey: string): IRestApi;\r\n"}}
